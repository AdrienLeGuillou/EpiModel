% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dendo.R
\name{as.phylo.transmat}
\alias{as.phylo.transmat}
\title{Convert transmat infection tree into a phylo object}
\usage{
\method{as.phylo}{transmat}(x, collapse.singles, ...)
}
\arguments{
\item{x}{An object of class \code{"transmat"}, the output from
\code{\link{get_transmat}}.}

\item{collapse.singles}{logical, DEPRECATED}

\item{...}{further arguments (unused)}
}
\description{
Converts the edgelist matrix in the transmat object into a phylo
             object by doing the required reordering and labeling.
}
\details{
Converts a \code{\link{transmat}} object containing information about the history of a 
simulated infection into a \code{\link{phylo}} object representation suitable for plotting
 as a tree with \code{\link[ape]{plot.phylo}}.  Each infection 
event becomes a 'node' (horizontal branch) in the resulting phylo tree, and each 
network vertex becomes a 'tip' of the tree.  The infection events are labled with 
the vertex id of the infector to make it possible to trace the path of infection.  

The infection timing information is included to position the phylo-nodes, with the
 lines to the tips drawn to the max time value +1 (the transmat does not contain info
 on vertex activity, so it effectively assumes all vertices are active/alive until 
 the end of the simulation). The function does not yet support infection trees with multiple infection seeds

Note that in EpiModel versions <= 1.2.4, the phylo tree was constructed differently, translating network 
vertices to both phylo-nodes and tips and requiring 'collapse.singles' to prune it to an appropriate branching structure.
}
\examples{
set.seed(10)
nw <- network.initialize(n = 100, directed = FALSE)
formation <- ~edges
target.stats <- 50
coef.diss <- dissolution_coefs(dissolution = ~offset(edges), duration = 20)

est1 <- netest(nw, formation, target.stats, coef.diss, verbose = FALSE)

param <- param.net(inf.prob = 0.5)
init <- init.net(i.num = 1)
control <- control.net(type = "SI", nsteps = 40, nsims = 1, verbose = FALSE,
                       use.pids = FALSE)

mod1 <- netsim(est1, param, init, control)
tm <- get_transmat(mod1)
tmPhylo <- as.phylo.transmat(tm)
plot(tmPhylo, show.node.label = TRUE,
              root.edge=TRUE, 
              cex = 0.5)

}

